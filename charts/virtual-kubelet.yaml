apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-kubelet
  namespace: default
spec:

  replicas: 1
  selector:
    matchLabels:
      run: virtual-kubelet
  template:
    metadata:
      labels:
        run: virtual-kubelet
    spec:
      serviceAccountName: virtual-kubelet
      containers:
      - image: localhost:5000/virtual-kubelet
        imagePullPolicy: Never
        name: virtual-kubelet
        resources: {}
        ports:
        - name: metrics
          containerPort: 10255
        # readinessProbe:
        #   httpGet:
        #     path: /stats/summary
        #     port: metrics
        command: ["/usr/bin/kubelet-cloud-run"]
        args:
        - --nodename
        - vkubelet-cloud-run-0
        - --provider
        - cloudrun
        - --provider-config
        - /vkubelet-mock-0-cfg.json
        - --startup-timeout
        - 10s
        - --klog.v
        - "2"
        - --klog.logtostderr
        - --log-level
        - debug
        env:
          - name : "APISERVER_CERT_LOCATION"
            value: "/run/config/pki/apiserver.crt"
          - name: "APISERVER_KEY_LOCATION"
            value: "/run/config/pki/apiserver.key"
          - name: "APISERVER_CA_CERT_LOCATION"
            value: "/run/config/pki/ca.crt"
          - name: KUBELET_PORT
            value: "10250"
          - name: VKUBELET_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        volumeMounts:
        # - mountPath: /etc/ssl/certs
        #   name: ca-certs
        #   readOnly: true
        # - mountPath: /var/lib/minikube/certs
        #   name: k8s-certs
        #   readOnly: true
        # - mountPath: /usr/share/ca-certificates
        #   name: usr-share-ca-certificates
        #   readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /etc/ca-certificates
          name: etc-ca-certificates
          readOnly: true
        - mountPath: /run/config/pki
          name: k8s-certs
          readOnly: true
        - mountPath: /usr/local/share/ca-certificates
          name: usr-local-share-ca-certificates
          readOnly: true
        - mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
        - name: application-default-credentials
          mountPath: /application_default_credentials.json # This should be your final destination
          subPath: application_default_credentials.json
      volumes:
      # - hostPath:
      #     path: /etc/ssl/certs
      #     type: DirectoryOrCreate
      #   name: ca-certs
      # - hostPath:
      #     path: /var/lib/minikube/certs
      #     type: DirectoryOrCreate
      #   name: k8s-certs
      # - hostPath:
      #     path: /usr/share/ca-certificates
      #     type: DirectoryOrCreate
      #   name: usr-share-ca-certificates
      - name: application-default-credentials # To access this volume, this name must be used inside volumeMounts of the container
        configMap:
          name: application-default-credentials # Name of the configMap
          items:
            - key: application_default_credentials.json  # Name of the item we had used inside our ConfigMap (under data:)
              path: application_default_credentials.json # Name of the file to be placed inside /etc
      - hostPath:
          path: /etc/ssl/certs
          type: DirectoryOrCreate
        name: ca-certs
      - hostPath:
          path: /etc/ca-certificates
          type: DirectoryOrCreate
        name: etc-ca-certificates
      - hostPath:
          path: /run/config/pki
          type: DirectoryOrCreate
        name: k8s-certs
      - hostPath:
          path: /usr/local/share/ca-certificates
          type: DirectoryOrCreate
        name: usr-local-share-ca-certificates
      - hostPath:
          path: /usr/share/ca-certificates
          type: DirectoryOrCreate
        name: usr-share-ca-certificates